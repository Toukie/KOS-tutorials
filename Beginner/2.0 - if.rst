=============
If statements
=============

Now we know how to set certain text to a variable we can explore more stuff.
For instance ``if``, this checks if a certain value matches the given value. ::

  set x to 1.

  if x = 1 {
    print "x is one".
  }

This will show: ``x is one``.

You've probably noticed the curly brackets ``{ }`` after an ``if`` statement. You don't need a period at the end of an ``if`` statement but you need these brackets if you have more than one statement in the body, otherwise they're optional.

This is valid: ::

  if x = 1
    print "x is one".

You could cover the piece the code within the curly brackets with your hand and say: if ``x`` is equal to ``1``, then do whatever
I covered with my hand. ``If`` statements can also be used for booleans: ::

  set SomeBoolean to true.

  if SomeBoolean = true {
    print "this is a true".
  }

This will show: ``this is true``.

Ofcourse the equals sign isn't the only symbol you can use, other symbols are:


Equals to or bigger than:

``1 >= 1``

``2 >= 1``

Equals to or smaller than

``1 <= 1``

``1 <= 2``

Is not equal to:

``1 <> 2``

So as you have seen, we created some commands that will only happen if a condition is true, otherwise nothing happens and we move
on. But what if you want to do some commands when the condition is true and instead of doing nothing when it's false,
you'd give it commands to do instead. The ``else`` statement also requires curly brackets ``{ }``. ::

  set SomeAnimal to "Dog".

  if SomeAnimal = "Cat" {
    print "this is a cat".
  } else {
    print "this is not a cat".
  }

Since ``SomeAnimal`` isn't ``Cat``, it skips whatever would happen if ``SomeAnimal`` would be ``Cat``. Then it checks what else to do, which is
to print ``this is not a cat``. You could expand this by using ``else if``, which means that if the first ``if`` statement isn't true
then check the following ``if`` statement. ::

  set SomeAnimal to "Dog".

  if SomeAnimal = "Cat" {
    print "this is a cat".
  } else if SomeAnimal = "Dog" {
    print "this is a dog".
  } else {
    print "this is neither a cat nor a dog".
  }

This would print ``this is a dog``.
